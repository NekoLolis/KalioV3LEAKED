<Application x:Class="KaliV3LEAKED.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KalioWPFV3">
    <Application.Resources>
        <Style x:Key="lblDesign" TargetType="{x:Type Label}">
            <Setter Property="Control.FontFamily" Value="Fonts/#gamer"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF4F4F4F"/>
        <Style x:Key="btnStyle1" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#232228" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                      FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd"
                                      Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#050505" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                      FillBehavior="HoldEnd" Duration="0:0:0.07" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd"
                                      Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Border.Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="Border.BorderBrush" Value="Transparent"/>
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF4F4F4F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnStyle2" TargetType="{x:Type Button}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Padding" Value="1"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#3e3d47" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                      FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd"
                                      Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FF141419" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                      FillBehavior="HoldEnd" Duration="0:0:0.07" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.EnterActions>
                                <TriggerBase.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd"
                                      Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </TriggerBase.ExitActions>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Border.Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="Border.BorderBrush" Value="Transparent"/>
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF4F4F4F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <FrameworkTemplate.Resources>
                            <Storyboard x:Key="StoryboardIsChecked">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                               Storyboard.TargetName="CheckFlag">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardIsCheckedOff">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                               Storyboard.TargetName="CheckFlag">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </FrameworkTemplate.Resources>
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10">
                                    <Canvas>
                                        <Border x:Name="CheckFlag" Background="White" CornerRadius="10" VerticalAlignment="Center"
                            BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">
                                            <UIElement.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </UIElement.RenderTransform>
                                            <UIElement.Effect>
                                                <DropShadowEffect ShadowDepth="1" Direction="180"/>
                                            </UIElement.Effect>
                                        </Border>
                                    </Canvas>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent" Value="true">
                                <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
                                <Setter Property="Control.Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                                <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="ForegroundPanel" Property="Border.Background" Value="Green"/>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}"/>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse"/>
                                </TriggerBase.EnterActions>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="False">
                                <Setter TargetName="ForegroundPanel" Property="Border.Background" Value="Gray"/>
                                <TriggerBase.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}"/>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue"/>
                                </TriggerBase.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnBlue" TargetType="{x:Type Button}">
            <Setter Property="Control.Background" Value="#fff"/>
            <Setter Property="Control.Foreground" Value="#000"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="FrameworkElement.Margin" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Control.Background}" CornerRadius="5" BorderThickness="1" Padding="5"
                    BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="Blue"/>
                    <Setter Property="Control.Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btnGreen" TargetType="{x:Type Button}">
            <Setter Property="Control.Background" Value="#fff"/>
            <Setter Property="Control.Foreground" Value="#000"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.Padding" Value="5"/>
            <Setter Property="FrameworkElement.Margin" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Control.Background}" CornerRadius="5" BorderThickness="1" Padding="5"
                    BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="Green"/>
                    <Setter Property="Control.Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btnLightRed" TargetType="{x:Type Button}">
            <Setter Property="Control.Background" Value="#fff"/>
            <Setter Property="Control.Foreground" Value="#000"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="FrameworkElement.Margin" Value="5"/>
            <Setter Property="Control.Padding" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Control.Background}" CornerRadius="5" BorderThickness="1" Padding="5"
                    BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="LightCoral"/>
                    <Setter Property="Control.Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btnGray" TargetType="{x:Type Button}">
            <Setter Property="Control.Background" Value="#fff"/>
            <Setter Property="Control.Foreground" Value="#000"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="FrameworkElement.Margin" Value="5"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Control.Background}" CornerRadius="5" BorderThickness="1" Padding="5"
                    BorderBrush="#000">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="DarkGray"/>
                    <Setter Property="Control.Foreground" Value="#fff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>